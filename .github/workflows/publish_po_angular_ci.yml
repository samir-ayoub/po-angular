name: PO-UI Publish
on:
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
        registry-url: 'https://registry.npmjs.org'

    - run: npm install
    - run: npm run build

    - name: Get package.json version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@master


    - name: Run publish ng-schematics
      run: npm publish dist/ng-schematics --tag next
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Add ng-schematics "latest" tag
      if: (!contains(${{ env.CURRENT_PACKAGE_VERSION }}, '-next') && !contains(${{ env.CURRENT_PACKAGE_VERSION }}, '-rc'))
      run: npm dist-tags add @123samir/gonna-build-a-mountain-po-schematics@${{ env.CURRENT_PACKAGE_VERSION }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        CURRENT_PACKAGE_VERSION: 'steps.package-version.outputs.current-version'





    - name: Run publish ng-storage
      run: npm publish dist/ng-storage --tag next
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Add ng-storage "latest" tag
      if: (!contains(${{ env.CURRENT_PACKAGE_VERSION }}, '-next') && !contains(${{ env.CURRENT_PACKAGE_VERSION }}, '-rc'))
      run: npm dist-tags add @123samir/gonna-build-a-mountain-po-storage@${{ env.CURRENT_PACKAGE_VERSION }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}



    - name: Run publish ng-sync
      run: npm publish dist/ng-sync --tag next
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Add ng-sync "latest" tag
      if: (!contains(${{ env.CURRENT_PACKAGE_VERSION }}, '-next') && !contains(${{ env.CURRENT_PACKAGE_VERSION }}, '-rc'))
      run: npm dist-tags add @123samir/gonna-build-a-mountain-po-sync@${{ env.CURRENT_PACKAGE_VERSION }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}



    - name: Run publish ng-components
      run: npm publish dist/ng-components --tag next
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Add ng-components "latest" tag
      if: (!contains(${{ env.CURRENT_PACKAGE_VERSION }}, '-next') && !contains(${{ env.CURRENT_PACKAGE_VERSION }}, '-rc'))
      run: npm dist-tags add @123samir/gonna-build-a-mountain-po-components@${{ env.CURRENT_PACKAGE_VERSION }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}



    - name: Run publish ng-templates
      run: npm publish dist/ng-templates --tag next
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Add ng-templates "latest" tag
      if: (!contains(${{ env.CURRENT_PACKAGE_VERSION }}, '-next') && !contains(${{ env.CURRENT_PACKAGE_VERSION }}, '-rc'))
      run: npm dist-tags add @123samir/gonna-build-a-mountain-po-templates@${{ env.CURRENT_PACKAGE_VERSION }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}



    - name: Run publish ng-code-editor
      run: npm publish dist/ng-code-editor --tag next
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Add ng-code-editor "latest" tag
      if: (!contains(${{ env.CURRENT_PACKAGE_VERSION }}, '-next') && !contains(${{ env.CURRENT_PACKAGE_VERSION }}, '-rc'))
      run: npm dist-tags add @123samir/gonna-build-a-mountain-po-code-editor@${{ env.CURRENT_PACKAGE_VERSION }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}