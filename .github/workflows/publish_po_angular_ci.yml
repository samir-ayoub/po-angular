name: PO-UI Publish
on:
  workflow_dispatch:
  
jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
        registry-url: 'https://registry.npmjs.org'

    - run: npm install
    - run: npm run build

    # Pega a última versão dos pacotes publicados no npm e armazena em variáveis
    - run: echo ::set-env name=SCHEMATICS_LAST_PUBLISHED_VERSION::$(npm view @123samir/gonna-build-a-mountain-po-schematics version)
    - run: echo ::set-env name=STORAGE_LAST_PUBLISHED_VERSION::$(npm view @123samir/gonna-build-a-mountain-po-storage version)
    - run: echo ::set-env name=SYNC_LAST_PUBLISHED_VERSION::$(npm view @123samir/gonna-build-a-mountain-po-sync version)
    - run: echo ::set-env name=COMPONENTS_LAST_PUBLISHED_VERSION::$(npm view @123samir/gonna-build-a-mountain-po-components version)
    - run: echo ::set-env name=TEMPLATES_LAST_PUBLISHED_VERSION::$(npm view @123samir/gonna-build-a-mountain-po-templates version)
    - run: echo ::set-env name=CODE_EDITOR_LAST_PUBLISHED_VERSION::$(npm view @123samir/gonna-build-a-mountain-po-code-editor version)

    # Pega a versão no package.json
    - name: Get package.json version.
      id: package-version
      uses: martinbeentjes/npm-get-version-action@master

    # PUBLISH NG-SCHEMATICS
    - name: ng-schematics - publish
      # Se a versão remota for igual à versão que será publicada então ele pula o publish deste pacote e tenta publicar os demais pacotes
      if: (!contains(env.PACKAGE_VERSION, env.SCHEMATICS_LAST_PUBLISHED_VERSION))
      run: npm publish dist/ng-schematics --tag next
      env:
        PACKAGE_VERSION: ${{ steps.package-version.outputs.current-version }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: ng-schematics - add "latest" tag
    
      if: (!contains(env.PACKAGE_VERSION, env.SCHEMATICS_LAST_PUBLISHED_VERSION) && !contains(env.PACKAGE_VERSION, '-next') && !contains(env.PACKAGE_VERSION, '-rc'))
      run: npm dist-tags add @123samir/gonna-build-a-mountain-po-schematics@${{ env.PACKAGE_VERSION }}
      env:
        PACKAGE_VERSION: ${{ steps.package-version.outputs.current-version }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    # PUBLISH NG-STORAGE
    - name: ng-storage - publish
      if: (!contains(env.PACKAGE_VERSION, env.STORAGE_LAST_PUBLISHED_VERSION))
      run: npm publish dist/ng-storage --tag next
      env:
        PACKAGE_VERSION: ${{ steps.package-version.outputs.current-version }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: ng-storage - add "latest" tag
      if: (!contains(env.PACKAGE_VERSION, env.STORAGE_LAST_PUBLISHED_VERSION) && !contains(env.PACKAGE_VERSION, '-next') && !contains(env.PACKAGE_VERSION, '-rc'))
      run: npm dist-tags add @123samir/gonna-build-a-mountain-po-storage@${{ env.PACKAGE_VERSION }}
      env:
        PACKAGE_VERSION: ${{ steps.package-version.outputs.current-version }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
    # PUBLISH NG-SYNC
    - name: ng-sync - publish 
      if: (!contains(env.PACKAGE_VERSION, env.SYNC_LAST_PUBLISHED_VERSION))
      run: npm publish dist/ng-sync --tag next
      env:
        PACKAGE_VERSION: ${{ steps.package-version.outputs.current-version }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: ng-sync - add "latest" tag
      if: (!contains(env.PACKAGE_VERSION, env.SYNC_LAST_PUBLISHED_VERSION) && !contains(env.PACKAGE_VERSION, '-next') && !contains(env.PACKAGE_VERSION, '-rc'))
      run: npm dist-tags add @123samir/gonna-build-a-mountain-po-sync@${{ env.PACKAGE_VERSION }}
      env:
        PACKAGE_VERSION: ${{ steps.package-version.outputs.current-version }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
    # PUBLISH NG-COMPONENTS
    - name: ng-components - publish
      if: (!contains(env.PACKAGE_VERSION, env.COMPONENTS_LAST_PUBLISHED_VERSION))
      run: npm publish dist/ng-components --tag next
      env:
        PACKAGE_VERSION: ${{ steps.package-version.outputs.current-version }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: ng-components - add "latest" tag
      if: (!contains(env.PACKAGE_VERSION, env.COMPONENTS_LAST_PUBLISHED_VERSION) && !contains(env.PACKAGE_VERSION, '-next') && !contains(env.PACKAGE_VERSION, '-rc'))
      run: npm dist-tags add @123samir/gonna-build-a-mountain-po-components@${{ env.PACKAGE_VERSION }}
      env:
        PACKAGE_VERSION: ${{ steps.package-version.outputs.current-version }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
    # PUBLISH NG-TEMPLATES
    - name: ng-templates - publish
      if: (!contains(env.PACKAGE_VERSION, env.TEMPLATES_LAST_PUBLISHED_VERSION))
      run: npm publish dist/ng-templates --tag next
      env:
        PACKAGE_VERSION: ${{ steps.package-version.outputs.current-version }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: ng-templates - add "latest" tag
      if: (!contains(env.PACKAGE_VERSION, env.TEMPLATES_LAST_PUBLISHED_VERSION) && !contains(env.PACKAGE_VERSION, '-next') && !contains(env.PACKAGE_VERSION, '-rc'))
      run: npm dist-tags add @123samir/gonna-build-a-mountain-po-templates@${{ env.PACKAGE_VERSION }}
      env:
        PACKAGE_VERSION: ${{ steps.package-version.outputs.current-version }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
    # PUBLISH NG-CODE-EDITOR
    - name: ng-code-editor publish
      if: (!contains(env.PACKAGE_VERSION, env.CODE_EDITOR_LAST_PUBLISHED_VERSION))
      run: npm publish dist/ng-code-editor --tag next
      env:
        PACKAGE_VERSION: ${{ steps.package-version.outputs.current-version }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: ng-code-editor add "latest" tag
      if: (!contains(env.PACKAGE_VERSION, env.CODE_EDITOR_LAST_PUBLISHED_VERSION) && !contains(env.PACKAGE_VERSION, '-next') && !contains(env.PACKAGE_VERSION, '-rc'))
      run: npm dist-tags add @123samir/gonna-build-a-mountain-po-code-editor@${{ env.PACKAGE_VERSION }}
      env:
        PACKAGE_VERSION: ${{ steps.package-version.outputs.current-version }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
