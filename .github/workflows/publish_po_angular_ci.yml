name: PO-UI Publish
on:
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
        registry-url: 'https://registry.npmjs.org'

    - run: npm install
    - run: npm run build

    - name: Get package.json version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@master


    - name: Check if current version has been published
      id: check
      uses: EndBug/version-check@v1
      with:
        file-url: https://unpkg.com/@123samir/gonna-build-a-mountain-po-schematics@latest/package.json
        static-checking: localIsNew



    - name: ng-schematics publish
      if: steps.check.outputs.changed == 'true'
      run: npm publish dist/ng-schematics --tag next
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: ng-schematics add "latest" tag
      if: (!contains(${{ env.PACKAGE_VERSION }}, '-next') && !contains(${{ env.PACKAGE_VERSION }}, '-rc') && !steps.check.outputs.changed == 'true')
      run: npm dist-tags add @123samir/gonna-build-a-mountain-po-schematics@${{ env.PACKAGE_VERSION }}
      env:
        PACKAGE_VERSION: ${{ steps.package-version.outputs.current-version }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      





    - name: ng-storage publish
      run: npm publish dist/ng-storage --tag next
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: ng-storage add "latest" tag
      if: (!contains(steps.package-version.outputs.current-version, '-next') && !contains(steps.package-version.outputs.current-version, '-rc'))
      run: npm dist-tags add @123samir/gonna-build-a-mountain-po-storage@${{ steps.package-version.outputs.current-version }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      




    - name: ng-sync publish 
      run: npm publish dist/ng-sync --tag next
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: ng-sync add "latest" tag
      if: (!contains(steps.package-version.outputs.current-version, '-next') && !contains(steps.package-version.outputs.current-version, '-rc'))
      run: npm dist-tags add @123samir/gonna-build-a-mountain-po-sync@${{ steps.package-version.outputs.current-version }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      




    - name: ng-components publish
      run: npm publish dist/ng-components --tag next
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: ng-components add "latest" tag
      if: (!contains(steps.package-version.outputs.current-version, '-next') && !contains(steps.package-version.outputs.current-version, '-rc'))
      run: npm dist-tags add @123samir/gonna-build-a-mountain-po-components@${{ steps.package-version.outputs.current-version }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      




    - name: ng-templates publish 
      run: npm publish dist/ng-templates --tag next
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: ng-templates add "latest" tag
      if: (!contains(steps.package-version.outputs.current-version, '-next') && !contains(steps.package-version.outputs.current-version, '-rc'))
      run: npm dist-tags add @123samir/gonna-build-a-mountain-po-templates@${{ steps.package-version.outputs.current-version }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      




    - name: ng-code-editor publish
      run: npm publish dist/ng-code-editor --tag next
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: ng-code-editor add "latest" tag
      if: (!contains(steps.package-version.outputs.current-version, '-next') && !contains(steps.package-version.outputs.current-version, '-rc'))
      run: npm dist-tags add @123samir/gonna-build-a-mountain-po-code-editor@${{ steps.package-version.outputs.current-version }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
